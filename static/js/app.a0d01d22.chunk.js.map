{"version":3,"sources":["utils/data.js","components/Task.js","components/TaskList.js","screens/MainTasksScreen.js","screens/TaskDetailScreen.js","components/Forms/colors.js","components/Forms/FormErrorMessage.js","components/Forms/FormTextInput.js","components/Forms/FormButton.js","components/Forms/FormSwitch.js","components/Form.js","components/Forms/Form.js","components/Forms/FormField.js","screens/CreateTaskScreen.js","App.js"],"names":["users","id","patientInfo","name","sex","dob","pcp","nextVisit","homePhone","mobilePhone","insurance","pharmacy","careTeamMembers","tasks","title","description","dateCreated","dateDue","status","owner","comments","notifications","row","fontSize","marginLeft","marginRight","styles","StyleSheet","create","container","flex","backgroundColor","alignitems","justifyContent","marginTop","paddingTop","paddingBottom","width","borderWidth","borderColor","borderRadius","fontWeight","fontStyle","incompleteStatus","color","completeStatus","Task","task","view","TouchableOpacity","onPress","View","style","Text","maxWidth","TaskList","ScrollView","map","idx","key","alignItems","newTaskButton","textAlign","padding","shadowOffset","height","shadowColor","shadowOpacity","MainTasksScreen","navigation","route","navigate","userList","undefined","params","JSON","stringify","newTask","push","user","statusContainer","paddingLeft","paddingRight","marginBottom","date","TaskDetailScreen","primary","secondary","black","white","ghostWhite","lightGrey","mediumGrey","red","lightPurple","FormErrorMessage","error","visible","errorText","Colors","FormTextInput","leftIcon","rightIcon","handlePasswordVisibility","otherProps","MaterialCommunityIcons","size","icon","TextInput","input","placeholderTextColor","rightIconStyles","flexDirection","marginVertical","alignSelf","button","buttonText","textTransform","Form","props","children","initialValues","onSubmit","validationSchema","Fragment","Base","Field","useFormikContext","setFieldTouched","setFieldValue","values","errors","touched","value","onChangeText","text","onBlur","Button","handleSubmit","ErrorMessage","Switch","onChange","x","onValueChange","addTaskButton","h1_text","field","fieldContainer","label","developerImage","connectButton","margin","connectText","roleButton","CreateTaskScreen","useState","submitted","setSubmitted","setNewTask","SafeAreaView","placeholder","autoCapitalize","Stack","createStackNavigator","App","NavigationContainer","Navigator","screenOptions","headerStyle","headerTintColor","headerTitleStyle","headerTitleContainerStyle","left","Screen","component","options"],"mappings":"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","file":"static/js/app.a0d01d22.chunk.js","sourcesContent":["export const users = {\n  users: [\n    {\n      id: 'laura',\n      patientInfo: {\n        name: 'Laura Chen',\n        sex: 'female',\n        dob: '09/23/1958',\n        pcp: 'Dr John Doe',\n        nextVisit: '05/25/2019',\n        homePhone: '402-456-7890',\n        mobilePhone: '(236) 561-6354',\n        insurance: 'Medicare',\n        pharmacy: 'CVS',\n        careTeamMembers: [\n          'Dr. John Doe',\n          'Nurse Ted Smith',\n          'Social Worker Colleen Jones',\n          'Sister Sara Chen',\n        ],\n      },\n      tasks: [\n        {\n          title: 'Follow up with Vascular surgery',\n          description: '',\n          dateCreated: '05/09/2021',\n          dateDue: '05/30/2021',\n          status: 'Incomplete',\n          owner: 'Dr. John Doe',\n          comments: '',\n          notifications: '',\n        },\n        {\n          title: 'Cardiology evaluation',\n          description: '',\n          dateCreated: '05/09/2021',\n          dateDue: '06/09/2021',\n          status: 'Incomplete',\n          owner: 'Nurse Ted Smith',\n          comments: '',\n          notifications: '',\n        },\n      ],\n    },\n    {\n      id: 'lau',\n      patientInfo: {\n        name: 'Lau Cheny',\n        sex: 'female',\n        dob: '09/23/1958',\n        pcp: 'Dr John Doe',\n        nextVisit: '05/25/2019',\n        homePhone: '402-456-7890',\n        mobilePhone: '(236) 561-6354',\n        insurance: 'Medicare',\n        pharmacy: 'CVS',\n        careTeamMembers: [\n          'Dr. John Doe',\n          'Nurse Ted Smith',\n          'Social Worker Colleen Jones',\n          'Sister Sara Chen',\n        ],\n      },\n      tasks: [\n        {\n          title: 'Follow up with Vascular surgery',\n          description: '',\n          dateCreated: '05/09/2021',\n          dateDue: '05/30/2021',\n          status: 'Incomplete',\n          owner: 'Dr. John Doe',\n          comments: '',\n          notifications: '',\n        },\n        {\n          title: 'Cardiology evaluation',\n          description: '',\n          dateCreated: '05/09/2021',\n          dateDue: '06/09/2021',\n          status: 'Incomplete',\n          owner: 'Nurse Ted Smith',\n          comments: '',\n          notifications: '',\n        },\n      ],\n    },\n    {\n      id: 'Chris',\n      patientInfo: {\n        name: 'Chris Chen',\n        sex: 'female',\n        dob: '09/23/1958',\n        pcp: 'Dr John Doe',\n        nextVisit: '05/25/2019',\n        homePhone: '402-456-7890',\n        mobilePhone: '(236) 561-6354',\n        insurance: 'Medicare',\n        pharmacy: 'CVS',\n        careTeamMembers: [\n          'Dr. John Doe',\n          'Nurse Ted Smith',\n          'Social Worker Colleen Jones',\n          'Sister Sara Chen',\n        ],\n      },\n      tasks: [\n        {\n          title: 'Follow up with Vascular surgery',\n          description: '',\n          dateCreated: '05/09/2021',\n          dateDue: '05/30/2021',\n          status: 'Incomplete',\n          owner: 'Dr. John Doe',\n          comments: '',\n          notifications: '',\n        },\n        {\n          title: 'Cardiology evaluation',\n          description: '',\n          dateCreated: '05/09/2021',\n          dateDue: '06/09/2021',\n          status: 'Incomplete',\n          owner: 'Nurse Ted Smith',\n          comments: '',\n          notifications: '',\n        },\n      ],\n    },\n    {\n      id: 'ben',\n      patientInfo: {\n        name: 'Ben Chen',\n        sex: 'male',\n        dob: '09/23/1958',\n        pcp: 'Dr John Doe',\n        nextVisit: '05/25/2019',\n        homePhone: '402-456-7890',\n        mobilePhone: '(236) 561-6354',\n        insurance: 'Medicare',\n        pharmacy: 'CVS',\n        careTeamMembers: [\n          'Dr. John Doe',\n          'Nurse Ted Smith',\n          'Social Worker Colleen Jones',\n          'Sister Sara Chen',\n        ],\n      },\n      tasks: [\n        {\n          title: 'Follow up with Vascular surgery',\n          description: '',\n          dateCreated: '05/09/2021',\n          dateDue: '05/30/2021',\n          status: 'Incomplete',\n          owner: 'Dr. John Doe',\n          comments: '',\n          notifications: '',\n        },\n        {\n          title: 'Cardiology evaluation',\n          description: '',\n          dateCreated: '05/09/2021',\n          dateDue: '06/09/2021',\n          status: 'Incomplete',\n          owner: 'Nurse Ted Smith',\n          comments: '',\n          notifications: '',\n        },\n      ],\n    },\n    {\n      id: 'zad',\n      patientInfo: {\n        name: 'Zaddeen Chen',\n        sex: 'female',\n        dob: '09/23/1958',\n        pcp: 'Dr John Doe',\n        nextVisit: '05/25/2019',\n        homePhone: '402-456-7890',\n        mobilePhone: '(236) 561-6354',\n        insurance: 'Medicare',\n        pharmacy: 'CVS',\n        careTeamMembers: [\n          'Dr. John Doe',\n          'Nurse Ted Smith',\n          'Social Worker Colleen Jones',\n          'Sister Sara Chen',\n        ],\n      },\n      tasks: [\n        {\n          title: 'Follow up with Vascular surgery',\n          description: '',\n          dateCreated: '05/09/2021',\n          dateDue: '05/30/2021',\n          status: 'Incomplete',\n          owner: 'Dr. John Doe',\n          comments: '',\n          notifications: '',\n        },\n        {\n          title: 'Cardiology evaluation',\n          description: '',\n          dateCreated: '05/09/2021',\n          dateDue: '06/09/2021',\n          status: 'Incomplete',\n          owner: 'Nurse Ted Smith',\n          comments: '',\n          notifications: '',\n        },\n      ],\n    },\n  ],\n}\n","import React from 'react'\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native'\n\n// TODO (L11): conditional styling?\n\nconst Task = ({ task, view }) => (\n  <TouchableOpacity onPress={() => view(task)}>\n    <View style={styles.container}>\n      <Text style={styles.title}>{task.title}</Text>\n      <Text style={styles.dateDue}>Due: {task.dateDue}</Text>\n      <Text style={styles.incompleteStatus}>Status: {task.status}</Text>\n    </View>\n  </TouchableOpacity>\n)\n\nconst row = {\n  fontSize: 16,\n  marginLeft: 10,\n  marginRight: 10,\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignitems: 'flex-start',\n    justifyContent: 'center',\n    marginTop: 20,\n    paddingTop: 5,\n    paddingBottom: 5,\n    //paddingLeft: 10,\n    //paddingRight: 75,\n    width: '100%',\n    borderWidth: 1,\n    borderColor: 'black',\n    borderRadius: 5,\n  },\n  title: {\n    ...row,\n    fontWeight: 500,\n  },\n  dateDue: {\n    ...row,\n    fontStyle: 'italic',\n  },\n  incompleteStatus: {\n    ...row,\n    color: 'red',\n  },\n  completeStatus: {\n    ...row,\n    color: 'green',\n  },\n})\n\nexport default Task\n","import React from 'react'\nimport { ScrollView, StyleSheet } from 'react-native'\nimport Task from './Task'\n\nconst TaskList = ({ tasks, view }) => {\n  return (\n    <ScrollView style={styles.container}>\n      {tasks.map((task, idx) => (\n        <Task key={idx} task={task} view={view} />\n      ))}\n    </ScrollView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '85%',\n    maxWidth: 800,\n  },\n})\n\nexport default TaskList\n","import React from 'react'\nimport { Text, View, StyleSheet, TouchableOpacity, Button } from 'react-native'\nimport { users } from '../utils/data'\nimport TaskList from '../components/TaskList'\nimport { useSafeAreaInsets } from 'react-native-safe-area-context'\n\n\nconst MainTasksScreen = ({ navigation, route }) => {\n  const view = (task) => {\n    navigation.navigate('TaskDetailScreen', {task})\n  }\n\n  // If we come from 'CreateTaskScreen' (i.e. we've added a new task), add & display the new task\n  // Else, just use the hardcoded list in 'data.js'\n  let userList = [...users.users]\n  if (route && route.params != undefined && JSON.stringify(route.params.newTask) !== '{}') {\n    userList[0].tasks.push(route.params.newTask);\n  }\n\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity\n        onPress={() => navigation.navigate('CreateTaskScreen')}\n        style={styles.newTaskButton}\n      >\n        <Text style={styles.title}>Create new task</Text>\n      </TouchableOpacity>\n      {userList.map((user, idx) => (\n        <TaskList key={idx} tasks={user.tasks} view={view}/>\n      ))}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 10,\n  },\n  newTaskButton: {\n    borderWidth: 1,\n    borderRadius: 5,\n    borderColor: 'black',\n    backgroundColor: '#c3a6ff',\n    width: '85%',\n    textAlign: 'center',\n    padding: 5,\n    maxWidth: 800,\n    shadowOffset:{width: 2,  height: 2},\n    shadowColor: 'black',\n    shadowOpacity: 1.0,\n  },\n  title: {\n    fontSize: 22,\n  },\n})\n\nexport default MainTasksScreen\n","import React from 'react'\nimport { Text, View, StyleSheet } from 'react-native'\n\nconst TaskDetailScreen = ({ navigation, route }) => {\n  const task = route.params.task\n\n  // handle comments & notif later\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{task.title}</Text>\n      <Text style={styles.date}>\n        Created: {task.dateCreated} | Due: {task.dateDue}\n      </Text>\n      <Text style={styles.owner}>- {task.owner} -</Text>\n      <Text style={styles.description}>{task.description}</Text>\n      <View style={styles.statusContainer}>\n        <Text style={styles.incompleteStatus}>{task.status}</Text>\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    marginTop: 20,\n  },\n  statusContainer: {\n    backgroundColor: 'white',\n    paddingTop: 10,\n    paddingBottom: 10,\n    paddingLeft: 75,\n    paddingRight: 75,\n    borderWidth: 1,\n    borderColor: 'black',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 500,\n  },\n  description: {\n    fontSize: 16,\n    marginBottom: 10,\n  },\n  date: {\n    fontSize: 14,\n    fontStyle: 'italic',\n    marginBottom: 5,\n  },\n  incompleteStatus: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'red',\n  },\n  completeStatus: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'green',\n  },\n  owner: {\n    marginBottom: 30,\n  },\n})\n\nexport default TaskDetailScreen\n","export default {\n  primary: 'lightblue',\n  secondary: '#039be5',\n  black: '#222222',\n  white: '#ffffff',\n  ghostWhite: '#f8f8ff',\n  lightGrey: '#f9f9f9',\n  mediumGrey: '#6e6869',\n  red: '#fc5c65',\n  lightPurple: '#c3a6ff',\n}\n","import React from 'react'\nimport { StyleSheet, Text } from 'react-native'\n\nimport Colors from './colors'\n\nexport default function FormErrorMessage({ error, visible }) {\n  if (!error || !visible) {\n    return null\n  }\n\n  return <Text style={styles.errorText}>{error}</Text>\n}\n\nconst styles = StyleSheet.create({\n  errorText: {\n    marginLeft: 15,\n    color: Colors.red,\n    fontSize: 16,\n    marginBottom: 5,\n    fontWeight: '600',\n  },\n})\n","import React from 'react'\nimport { View, StyleSheet, TextInput, TouchableOpacity } from 'react-native'\nimport { MaterialCommunityIcons } from '@expo/vector-icons'\n\nimport Colors from './colors'\n\nexport default function FormTextInput({\n  leftIcon,\n  width = '100%',\n  rightIcon,\n  handlePasswordVisibility,\n  ...otherProps\n}) {\n  return (\n    <View style={[styles.container, { width }]}>\n      {leftIcon && (\n        <MaterialCommunityIcons\n          name={leftIcon}\n          size={20}\n          color={Colors.mediumGrey}\n          style={styles.icon}\n        />\n      )}\n      <TextInput\n        style={styles.input}\n        placeholderTextColor={Colors.mediumGrey}\n        {...otherProps}\n      />\n      {rightIcon && (\n        <TouchableOpacity onPress={handlePasswordVisibility}>\n          <MaterialCommunityIcons\n            name={rightIcon}\n            size={20}\n            color={Colors.mediumGrey}\n            style={styles.rightIconStyles}\n          />\n        </TouchableOpacity>\n      )}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.lightGrey,\n    borderRadius: 25,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    padding: 15,\n    marginVertical: 10,\n  },\n  icon: {\n    marginRight: 10,\n  },\n  input: {\n    flex: 1,\n    width: '100%',\n    fontSize: 18,\n    color: Colors.black,\n  },\n  rightIconStyles: {\n    alignSelf: 'center',\n    marginLeft: 10,\n  },\n})\n","import React from 'react'\nimport { Text, TouchableOpacity, StyleSheet } from 'react-native'\nimport { useFormikContext } from 'formik'\n\nimport Colors from './colors'\n\nexport default function FormButton({ title, onPress, color = 'lightPurple' }) {\n  const { handleSubmit, values } = useFormikContext()\n  const onPressAndSubmit = () => {\n    if (onPress) { onPress() };\n    handleSubmit();\n  }\n  const text = typeof title === 'function' ? title(values) : title\n\n  return (\n    <TouchableOpacity\n      style={[styles.button, { backgroundColor: Colors[color] }]}\n      onPress={onPressAndSubmit}\n    >\n      <Text style={styles.buttonText}>{text}</Text>\n    </TouchableOpacity>\n  )\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    borderWidth: 1,\n    borderRadius: 5,\n    borderColor: 'black',\n    textAlign: 'center',\n    padding: 5,\n    shadowOffset:{ width: 2,  height: 2, },\n    shadowColor: 'black',\n    shadowOpacity: 1.0,\n  },\n  buttonText: {\n    color: Colors.black,\n    fontSize: 18,\n    fontWeight: '600',\n    textTransform: 'uppercase',\n  },\n  \n})\n","import React from 'react'\nimport { StyleSheet, Switch, Text, View } from 'react-native'\nimport { useFormikContext } from 'formik'\n\nimport Colors from './colors'\n\nexport default function FormSwitch({\n  name,\n  title,\n  onChange = (x) => x,\n  ...otherProps\n}) {\n  const { values, setFieldValue } = useFormikContext()\n  const value = values[name]\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{title}</Text>\n      <Switch\n        value={value}\n        onValueChange={(value) => {\n          onChange(value)\n          setFieldValue(name, value)\n        }}\n        {...otherProps}\n      />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'row',\n  },\n  title: {\n    color: Colors.white,\n    fontSize: 18,\n    fontWeight: '600',\n    marginRight: 5,\n  },\n})\n","import Base from './Forms/Form'\nimport FormField from './Forms/FormField'\nimport FormButton from './Forms/FormButton'\nimport FormErrorMessage from './Forms/FormErrorMessage'\nimport FormSwitch from './Forms/FormSwitch'\n\nconst Form = (props) => Base(props)\n\nForm.Field = FormField\nForm.Button = FormButton\nForm.ErrorMessage = FormErrorMessage\nForm.Switch = FormSwitch\n\nexport default Form\n","import React from 'react'\nimport { Formik } from 'formik'\n\nexport default function Form({\n  children,\n  initialValues,\n  onSubmit,\n  validationSchema,\n}) {\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      {() => <React.Fragment>{children}</React.Fragment>}\n    </Formik>\n  )\n}\n","import React from 'react'\nimport { useFormikContext } from 'formik'\n\nimport FormErrorMessage from './FormErrorMessage'\nimport FormTextInput from './FormTextInput'\n\nexport default function FormField({ name, width, ...otherProps }) {\n  const {\n    setFieldTouched,\n    setFieldValue,\n    values,\n    errors,\n    touched,\n  } = useFormikContext()\n\n  return (\n    <React.Fragment>\n      <FormTextInput\n        value={values[name]}\n        onChangeText={(text) => setFieldValue(name, text)}\n        onBlur={() => setFieldTouched(name)}\n        width={width}\n        {...otherProps}\n      />\n      <FormErrorMessage error={errors[name]} visible={touched[name]} />\n    </React.Fragment>\n  )\n}\n","import React, { useState } from 'react'\nimport { SafeAreaView, StyleSheet, Text, TouchableOpacity } from 'react-native'\nimport { ScrollView } from 'react-native-gesture-handler'\nimport Form from '../components/Form'\n\nconst CreateTaskScreen = ({ navigation }) => {\n  const [submitted, setSubmitted] = useState(false)\n  const [newTask, setNewTask] = useState({}) // Keep track of new task\n\n  // Update the 'newTask' variable based on user input\n  const handleSubmit = (values) => {\n    setNewTask({\n      title: values.title,\n      description: values.description,\n      dateCreated: '05/13/2021', // Hardcoded date lol\n      dateDue: values.dateDue,\n      status: 'Incomplete',\n      owner: 'Dr. Jane Doe',\n      comments: '',\n      notifications: '',\n    })\n  }\n\n  return !submitted ? (\n    <SafeAreaView style={styles.container}>\n      <Text label=\"Name\" style={styles.name}>\n        Post a new task!\n      </Text>\n      <ScrollView>\n        <Form\n          initialValues={{\n            title: '',\n            description: '',\n            dateCreated: '',\n            dateDue: '',\n            status: 'Incomplete',\n            owner: '',\n            comments: '',\n            notifications: '',\n          }}\n          onSubmit={(values) => {\n            setSubmitted(true);\n            handleSubmit(values);\n          }}\n        >\n          <Form.Field\n            name=\"title\"\n            placeholder=\"Enter task name\"\n            autoCapitalize=\"none\"\n          />\n          <Form.Field\n            name=\"description\"\n            placeholder=\"Enter task description\"\n            autoCapitalize=\"none\"\n          />\n          <Form.Field\n            name=\"dateDue\"\n            placeholder=\"Enter due date for this task\"\n            autoCapitalize=\"none\"\n          />\n          <Form.Button title={'Add new task'} />\n        </Form>\n      </ScrollView>\n    </SafeAreaView>\n  ) : (\n    <SafeAreaView style={styles.container}>\n      <Text style={styles.h1_text}>Task successfully created!</Text>\n      <TouchableOpacity\n        style={styles.addTaskButton}\n        onPress={() => navigation.navigate('MainTasksScreen', {newTask})} // Pass new task to 'MainTasksScreen.js'\n      >\n        <Text style={styles.buttonText}>Return to Home Screen</Text>\n      </TouchableOpacity>\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  addTaskButton: {\n    borderWidth: 1,\n    borderRadius: 5,\n    borderColor: 'black',\n    backgroundColor: '#c3a6ff',\n    textAlign: 'center',\n    padding: 5,\n    shadowOffset:{ width: 2,  height: 2, },\n    shadowColor: 'black',\n    shadowOpacity: 1.0,\n  },\n  container: {\n    flex: 1,\n    marginTop: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: '90%',\n  },\n  h1_text: {\n    fontSize: 48,\n    marginBottom: 25,\n    justifyContent: 'center',\n    textAlign: 'center',\n  },\n  field: {\n    padding: 5,\n    backgroundColor: 'white',\n    borderRadius: 5,\n    fontSize: 18,\n  },\n  fieldContainer: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  label: {\n    fontWeight: 'bold',\n  },\n  name: {\n    fontSize: 24,\n    marginBottom: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  developerImage: {\n    width: 200,\n    height: 300,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: 10,\n  },\n  connectButton: {\n    margin: 30,\n    padding: 10,\n    textAlign: 'center',\n    backgroundColor: 'lightblue',\n  },\n  connectText: {\n    fontSize: 22,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    // fontWeight: 500,\n  },\n  roleButton: {\n    backgroundColor: '#2196F3',\n    fontSize: 16,\n    width: 250,\n    padding: 15,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    justifyContent: 'center',\n    textAlign: 'center',\n  },\n  buttonText: {\n    fontSize: 20,\n    color: 'black',\n    textAlign: 'center',\n  },\n  developerImage: {\n    width: 200,\n    height: 200,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: 10,\n  },\n})\n\nexport default CreateTaskScreen\n","import React from 'react'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport { StyleSheet } from 'react-native'\nimport { NavigationContainer } from '@react-navigation/native'\nimport MainTasksScreen from './screens/MainTasksScreen'\nimport TaskDetailScreen from './screens/TaskDetailScreen'\nimport CreateTaskScreen from './screens/CreateTaskScreen'\n\nconst Stack = createStackNavigator()\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator\n        screenOptions={{\n          headerStyle: {\n            backgroundColor: '#610f94', // some purple color lol\n          },\n          headerTintColor: 'white',\n          headerTitleStyle: {\n            alignSelf: 'center',\n            fontWeight: 'bold',\n          },\n          headerTitleContainerStyle: {\n            left: 0,\n          },\n        }}\n      >\n        <Stack.Screen\n          name=\"MainTasksScreen\"\n          component={MainTasksScreen}\n          options={{ title: 'Main Tasks' }}\n        />\n        <Stack.Screen\n          name=\"CreateTaskScreen\"\n          component={CreateTaskScreen}\n          options={{ title: 'Create New Task' }}\n        />\n        <Stack.Screen\n          name=\"TaskDetailScreen\"\n          component={TaskDetailScreen}\n          options={{ title: 'Task Details' }}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n})\n"],"sourceRoot":""}