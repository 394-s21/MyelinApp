{"version":3,"sources":["utils/data.js","components/Task.js","components/TaskList.js","screens/MainTasksScreen.js","screens/TaskDetailScreen.js","components/Forms/colors.js","components/Forms/FormErrorMessage.js","components/Forms/FormTextInput.js","components/Forms/FormButton.js","components/Forms/FormSwitch.js","components/Form.js","components/Forms/Form.js","components/Forms/FormField.js","screens/CreateTaskScreen.js","components/UserProfile.js","screens/ViewPatientsScreen.js","App.js"],"names":["users","id","patientInfo","name","sex","dob","pcp","nextVisit","homePhone","mobilePhone","insurance","pharmacy","careTeamMembers","tasks","title","description","dateCreated","dateDue","status","owner","urgency","comments","notifications","row","fontSize","marginLeft","marginRight","styles","StyleSheet","create","container","display","flexDirection","backgroundColor","alignItems","marginTop","paddingTop","paddingBottom","width","borderWidth","borderColor","borderRadius","fontWeight","fontStyle","incompleteStatus","color","completeStatus","urgencyStatus","urgencyView","flex","textView","Task","task","view","TouchableOpacity","onPress","View","style","Text","maxWidth","TaskList","ScrollView","map","idx","key","justifyContent","newTaskButton","textAlign","padding","shadowOffset","height","shadowColor","shadowOpacity","MainTasksScreen","navigation","thisUser","route","params","user","navigate","statusContainer","paddingLeft","paddingRight","marginBottom","date","TaskDetailScreen","primary","secondary","black","white","ghostWhite","lightGrey","mediumGrey","red","lightPurple","FormErrorMessage","error","visible","errorText","Colors","FormTextInput","leftIcon","rightIcon","handlePasswordVisibility","otherProps","MaterialCommunityIcons","size","icon","TextInput","input","placeholderTextColor","rightIconStyles","marginVertical","alignSelf","button","buttonText","textTransform","Form","props","children","initialValues","onSubmit","validationSchema","Fragment","Base","Field","useFormikContext","setFieldTouched","setFieldValue","values","errors","touched","value","onChangeText","text","onBlur","Button","handleSubmit","ErrorMessage","Switch","onChange","x","onValueChange","addTaskButton","h1_text","field","fieldContainer","label","connectButton","margin","connectText","roleButton","CreateTaskScreen","useState","submitted","setSubmitted","newTask","setNewTask","SafeAreaView","placeholder","autoCapitalize","UserProfile","ViewPatientsScreen","userList","Stack","createStackNavigator","App","NavigationContainer","Navigator","screenOptions","headerStyle","headerTintColor","headerTitleStyle","headerTitleContainerStyle","left","Screen","component","options"],"mappings":"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","file":"static/js/app.0910789a.chunk.js","sourcesContent":["export const users = {\n  users: [\n    {\n      id: 'laura',\n      patientInfo: {\n        name: 'Laura Chen',\n        sex: 'female',\n        dob: '09/23/1958',\n        pcp: 'Dr John Doe',\n        nextVisit: '05/25/2019',\n        homePhone: '402-456-7890',\n        mobilePhone: '(236) 561-6354',\n        insurance: 'Medicare',\n        pharmacy: 'CVS',\n        careTeamMembers: [\n          'Dr. John Doe',\n          'Nurse Ted Smith',\n          'Social Worker Colleen Jones',\n          'Sister Sara Chen',\n        ],\n      },\n      tasks: [\n        {\n          title: 'Follow up with Vascular surgery',\n          description: '',\n          dateCreated: '05/09/2021',\n          dateDue: '05/30/2021',\n          status: 'Incomplete',\n          owner: 'Dr. John Doe',\n          urgency: 1,\n          comments: '',\n          notifications: '',\n        },\n        {\n          title: 'Cardiology evaluation',\n          description: '',\n          dateCreated: '05/09/2021',\n          dateDue: '06/09/2021',\n          status: 'Incomplete',\n          owner: 'Nurse Ted Smith',\n          urgency: 1,\n          comments: '',\n          notifications: '',\n        },\n      ],\n    },\n    {\n      id: 'lau',\n      patientInfo: {\n        name: 'Lau Cheny',\n        sex: 'female',\n        dob: '09/23/1958',\n        pcp: 'Dr John Doe',\n        nextVisit: '05/25/2019',\n        homePhone: '402-456-7890',\n        mobilePhone: '(236) 561-6354',\n        insurance: 'Medicare',\n        pharmacy: 'CVS',\n        careTeamMembers: [\n          'Dr. John Doe',\n          'Nurse Ted Smith',\n          'Social Worker Colleen Jones',\n          'Sister Sara Chen',\n        ],\n      },\n      tasks: [\n        {\n          title: 'Follow up with Vascular surgery',\n          description: '',\n          dateCreated: '05/09/2021',\n          dateDue: '05/30/2021',\n          status: 'Incomplete',\n          owner: 'Dr. John Doe',\n          urgency: 1,\n          comments: '',\n          notifications: '',\n        },\n        {\n          title: 'Cardiology evaluation',\n          description: '',\n          dateCreated: '05/09/2021',\n          dateDue: '06/09/2021',\n          status: 'Incomplete',\n          owner: 'Nurse Ted Smith',\n          urgency: 0,\n          comments: '',\n          notifications: '',\n        },\n      ],\n    },\n    {\n      id: 'Chris',\n      patientInfo: {\n        name: 'Chris Chen',\n        sex: 'female',\n        dob: '09/23/1958',\n        pcp: 'Dr John Doe',\n        nextVisit: '05/25/2019',\n        homePhone: '402-456-7890',\n        mobilePhone: '(236) 561-6354',\n        insurance: 'Medicare',\n        pharmacy: 'CVS',\n        careTeamMembers: [\n          'Dr. John Doe',\n          'Nurse Ted Smith',\n          'Social Worker Colleen Jones',\n          'Sister Sara Chen',\n        ],\n      },\n      tasks: [\n        {\n          title: 'Follow up with Vascular surgery',\n          description: '',\n          dateCreated: '05/09/2021',\n          dateDue: '05/30/2021',\n          status: 'Incomplete',\n          owner: 'Dr. John Doe',\n          comments: '',\n          notifications: '',\n        },\n        {\n          title: 'Cardiology evaluation',\n          description: '',\n          dateCreated: '05/09/2021',\n          dateDue: '06/09/2021',\n          status: 'Incomplete',\n          owner: 'Nurse Ted Smith',\n          comments: '',\n          notifications: '',\n        },\n      ],\n    },\n    {\n      id: 'ben',\n      patientInfo: {\n        name: 'Ben Chen',\n        sex: 'male',\n        dob: '09/23/1958',\n        pcp: 'Dr John Doe',\n        nextVisit: '05/25/2019',\n        homePhone: '402-456-7890',\n        mobilePhone: '(236) 561-6354',\n        insurance: 'Medicare',\n        pharmacy: 'CVS',\n        careTeamMembers: [\n          'Dr. John Doe',\n          'Nurse Ted Smith',\n          'Social Worker Colleen Jones',\n          'Sister Sara Chen',\n        ],\n      },\n      tasks: [\n        {\n          title: 'Follow up with Vascular surgery',\n          description: '',\n          dateCreated: '05/09/2021',\n          dateDue: '05/30/2021',\n          status: 'Incomplete',\n          owner: 'Dr. John Doe',\n          urgency: 1,\n          comments: '',\n          notifications: '',\n        },\n        {\n          title: 'Cardiology evaluation',\n          description: '',\n          dateCreated: '05/09/2021',\n          dateDue: '06/09/2021',\n          status: 'Incomplete',\n          owner: 'Nurse Ted Smith',\n          urgency: 1,\n          comments: '',\n          notifications: '',\n        },\n      ],\n    },\n    {\n      id: 'zad',\n      patientInfo: {\n        name: 'Zaddeen Chen',\n        sex: 'female',\n        dob: '09/23/1958',\n        pcp: 'Dr John Doe',\n        nextVisit: '05/25/2019',\n        homePhone: '402-456-7890',\n        mobilePhone: '(236) 561-6354',\n        insurance: 'Medicare',\n        pharmacy: 'CVS',\n        careTeamMembers: [\n          'Dr. John Doe',\n          'Nurse Ted Smith',\n          'Social Worker Colleen Jones',\n          'Sister Sara Chen',\n        ],\n      },\n      tasks: [\n        {\n          title: 'Follow up with Vascular surgery',\n          description: '',\n          dateCreated: '05/09/2021',\n          dateDue: '05/30/2021',\n          status: 'Incomplete',\n          owner: 'Dr. John Doe',\n          urgency: 0,\n          comments: '',\n          notifications: '',\n        },\n        {\n          title: 'Cardiology evaluation',\n          description: '',\n          dateCreated: '05/09/2021',\n          dateDue: '06/09/2021',\n          status: 'Incomplete',\n          owner: 'Nurse Ted Smith',\n          urgency: 0,\n          comments: '',\n          notifications: '',\n        },\n      ],\n    },\n  ],\n}\n","import React from 'react'\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native'\n\n// TODO (L11): conditional styling?\n\nconst Task = ({ task, view }) => {\n  return (\n  <TouchableOpacity onPress={() => view(task)}>\n    <View style={styles.container}>\n      <View style={styles.textView}>\n        <Text style={styles.title}>{task.title}</Text>\n        <Text style={styles.dateDue}>Due: {task.dateDue}</Text>\n        <Text style={styles.incompleteStatus}>Status: {task.status}</Text>\n      </View>\n      <View style={styles.urgencyView}>\n        <Text style={styles.urgencyStatus}>{task.urgency === 1 ? \"❗️\": \"\"} </Text>\n      </View>\n    </View>\n  </TouchableOpacity>\n  )\n}\n\nconst row = {\n  fontSize: 16,\n  marginLeft: 10,\n  marginRight: 10,\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    backgroundColor: '#fff',\n    alignItems: 'flex-start',\n    marginTop: 20,\n    paddingTop: 5,\n    paddingBottom: 5,\n    width: '100%',\n    borderWidth: 1,\n    borderColor: 'black',\n    borderRadius: 5,\n  },\n  title: {\n    ...row,\n    fontWeight: \"500\",\n  },\n  dateDue: {\n    ...row,\n    fontStyle: 'italic',\n  },\n  incompleteStatus: {\n    ...row,\n    color: 'red',\n  },\n  completeStatus: {\n    ...row,\n    color: 'green',\n  },\n  urgencyStatus: {\n    ...row,\n    color: 'red',\n    fontSize: 32,\n  },\n  urgencyView: {\n    ...row,\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-end',\n  },\n  textView: {\n    ...row,\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    width: '65%',\n    color: 'red',\n  },\n})\n\nexport default Task\n","import React from 'react'\nimport { ScrollView, StyleSheet } from 'react-native'\nimport Task from './Task'\n\nconst TaskList = ({ tasks, view }) => {\n  return (\n    <ScrollView style={styles.container}>\n      {tasks.map((task, idx) => (\n        <Task key={idx} task={task} view={view} />\n      ))}\n    </ScrollView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '85%',\n    maxWidth: 800,\n  },\n})\n\nexport default TaskList\n","import React from 'react'\nimport { Text, View, StyleSheet, TouchableOpacity, Button } from 'react-native'\nimport { users } from '../utils/data'\nimport TaskList from '../components/TaskList'\nimport { useSafeAreaInsets } from 'react-native-safe-area-context'\n\n\nconst MainTasksScreen = ({ navigation, route }) => {\n  const view = (task) => {\n    navigation.navigate('TaskDetailScreen', {task})\n  }\n\n  const thisUser = route.params.user\n  \n  return (\n    <View style={styles.container}>\n      <TouchableOpacity\n        onPress={() => navigation.navigate('CreateTaskScreen')}\n        style={styles.newTaskButton}\n      >\n        <Text style={styles.title}>Create new task</Text>\n      </TouchableOpacity>\n      <TaskList tasks={thisUser.tasks} view={view}/>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 10,\n  },\n  newTaskButton: {\n    borderWidth: 1,\n    borderRadius: 5,\n    borderColor: 'black',\n    backgroundColor: '#c3a6ff',\n    width: '85%',\n    textAlign: 'center',\n    padding: 5,\n    maxWidth: 800,\n    shadowOffset:{width: 2,  height: 2},\n    shadowColor: 'black',\n    shadowOpacity: 1.0,\n  },\n  title: {\n    fontSize: 22,\n  },\n})\n\nexport default MainTasksScreen\n","import React from 'react'\nimport { Text, View, StyleSheet } from 'react-native'\n\nconst TaskDetailScreen = ({ navigation, route }) => {\n  const task = route.params.task\n\n  // handle comments & notif later\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{task.title}</Text>\n      <Text style={styles.date}>\n        Created: {task.dateCreated} | Due: {task.dateDue}\n      </Text>\n      <Text style={styles.owner}>- {task.owner} -</Text>\n      <Text style={styles.description}>{task.description}</Text>\n      <View style={styles.statusContainer}>\n        <Text style={styles.incompleteStatus}>{task.status}</Text>\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    marginTop: 20,\n  },\n  statusContainer: {\n    backgroundColor: 'white',\n    paddingTop: 10,\n    paddingBottom: 10,\n    paddingLeft: 75,\n    paddingRight: 75,\n    borderWidth: 1,\n    borderColor: 'black',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: \"500\",\n  },\n  description: {\n    fontSize: 16,\n    marginBottom: 10,\n  },\n  date: {\n    fontSize: 14,\n    fontStyle: 'italic',\n    marginBottom: 5,\n  },\n  incompleteStatus: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'red',\n  },\n  completeStatus: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'green',\n  },\n  owner: {\n    marginBottom: 30,\n  },\n})\n\nexport default TaskDetailScreen\n","export default {\n  primary: 'lightblue',\n  secondary: '#039be5',\n  black: '#222222',\n  white: '#ffffff',\n  ghostWhite: '#f8f8ff',\n  lightGrey: '#f9f9f9',\n  mediumGrey: '#6e6869',\n  red: '#fc5c65',\n  lightPurple: '#c3a6ff',\n}\n","import React from 'react'\nimport { StyleSheet, Text } from 'react-native'\n\nimport Colors from './colors'\n\nexport default function FormErrorMessage({ error, visible }) {\n  if (!error || !visible) {\n    return null\n  }\n\n  return <Text style={styles.errorText}>{error}</Text>\n}\n\nconst styles = StyleSheet.create({\n  errorText: {\n    marginLeft: 15,\n    color: Colors.red,\n    fontSize: 16,\n    marginBottom: 5,\n    fontWeight: '600',\n  },\n})\n","import React from 'react'\nimport { View, StyleSheet, TextInput, TouchableOpacity } from 'react-native'\nimport { MaterialCommunityIcons } from '@expo/vector-icons'\n\nimport Colors from './colors'\n\nexport default function FormTextInput({\n  leftIcon,\n  width = '100%',\n  rightIcon,\n  handlePasswordVisibility,\n  ...otherProps\n}) {\n  return (\n    <View style={[styles.container, { width }]}>\n      {leftIcon && (\n        <MaterialCommunityIcons\n          name={leftIcon}\n          size={20}\n          color={Colors.mediumGrey}\n          style={styles.icon}\n        />\n      )}\n      <TextInput\n        style={styles.input}\n        placeholderTextColor={Colors.mediumGrey}\n        {...otherProps}\n      />\n      {rightIcon && (\n        <TouchableOpacity onPress={handlePasswordVisibility}>\n          <MaterialCommunityIcons\n            name={rightIcon}\n            size={20}\n            color={Colors.mediumGrey}\n            style={styles.rightIconStyles}\n          />\n        </TouchableOpacity>\n      )}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.lightGrey,\n    borderRadius: 25,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    padding: 15,\n    marginVertical: 10,\n  },\n  icon: {\n    marginRight: 10,\n  },\n  input: {\n    flex: 1,\n    width: '100%',\n    fontSize: 18,\n    color: Colors.black,\n  },\n  rightIconStyles: {\n    alignSelf: 'center',\n    marginLeft: 10,\n  },\n})\n","import React from 'react'\nimport { Text, TouchableOpacity, StyleSheet } from 'react-native'\nimport { useFormikContext } from 'formik'\n\nimport Colors from './colors'\n\nexport default function FormButton({ title, onPress, color = 'lightPurple' }) {\n  const { handleSubmit, values } = useFormikContext()\n  const onPressAndSubmit = () => {\n    if (onPress) { onPress() };\n    handleSubmit();\n  }\n  const text = typeof title === 'function' ? title(values) : title\n\n  return (\n    <TouchableOpacity\n      style={[styles.button, { backgroundColor: Colors[color] }]}\n      onPress={onPressAndSubmit}\n    >\n      <Text style={styles.buttonText}>{text}</Text>\n    </TouchableOpacity>\n  )\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    borderWidth: 1,\n    borderRadius: 5,\n    borderColor: 'black',\n    textAlign: 'center',\n    padding: 5,\n    shadowOffset:{ width: 2,  height: 2, },\n    shadowColor: 'black',\n    shadowOpacity: 1.0,\n  },\n  buttonText: {\n    color: Colors.black,\n    fontSize: 18,\n    fontWeight: '600',\n    textTransform: 'uppercase',\n  },\n  \n})\n","import React from 'react'\nimport { StyleSheet, Switch, Text, View } from 'react-native'\nimport { useFormikContext } from 'formik'\n\nimport Colors from './colors'\n\nexport default function FormSwitch({\n  name,\n  title,\n  onChange = (x) => x,\n  ...otherProps\n}) {\n  const { values, setFieldValue } = useFormikContext()\n  const value = values[name]\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{title}</Text>\n      <Switch\n        value={value}\n        onValueChange={(value) => {\n          onChange(value)\n          setFieldValue(name, value)\n        }}\n        {...otherProps}\n      />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'row',\n  },\n  title: {\n    color: Colors.white,\n    fontSize: 18,\n    fontWeight: '600',\n    marginRight: 5,\n  },\n})\n","import Base from './Forms/Form'\nimport FormField from './Forms/FormField'\nimport FormButton from './Forms/FormButton'\nimport FormErrorMessage from './Forms/FormErrorMessage'\nimport FormSwitch from './Forms/FormSwitch'\n\nconst Form = (props) => Base(props)\n\nForm.Field = FormField\nForm.Button = FormButton\nForm.ErrorMessage = FormErrorMessage\nForm.Switch = FormSwitch\n\nexport default Form\n","import React from 'react'\nimport { Formik } from 'formik'\n\nexport default function Form({\n  children,\n  initialValues,\n  onSubmit,\n  validationSchema,\n}) {\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      {() => <React.Fragment>{children}</React.Fragment>}\n    </Formik>\n  )\n}\n","import React from 'react'\nimport { useFormikContext } from 'formik'\n\nimport FormErrorMessage from './FormErrorMessage'\nimport FormTextInput from './FormTextInput'\n\nexport default function FormField({ name, width, ...otherProps }) {\n  const {\n    setFieldTouched,\n    setFieldValue,\n    values,\n    errors,\n    touched,\n  } = useFormikContext()\n\n  return (\n    <React.Fragment>\n      <FormTextInput\n        value={values[name]}\n        onChangeText={(text) => setFieldValue(name, text)}\n        onBlur={() => setFieldTouched(name)}\n        width={width}\n        {...otherProps}\n      />\n      <FormErrorMessage error={errors[name]} visible={touched[name]} />\n    </React.Fragment>\n  )\n}\n","import React, { useState } from 'react'\nimport { SafeAreaView, StyleSheet, Text, TouchableOpacity } from 'react-native'\nimport { ScrollView } from 'react-native-gesture-handler'\nimport Form from '../components/Form'\n\nconst CreateTaskScreen = ({ navigation }) => {\n  const [submitted, setSubmitted] = useState(false)\n  const [newTask, setNewTask] = useState({}) // Keep track of new task\n\n  // Update the 'newTask' variable based on user input\n  const handleSubmit = (values) => {\n    setNewTask({\n      title: values.title,\n      description: values.description,\n      dateCreated: '05/13/2021', // Hardcoded date lol\n      dateDue: values.dateDue,\n      status: 'Incomplete',\n      owner: 'Dr. Jane Doe',\n      comments: '',\n      notifications: '',\n    })\n  }\n\n  return !submitted ? (\n    <SafeAreaView style={styles.container}>\n      <Text label=\"Name\" style={styles.name}>\n        Post a new task!\n      </Text>\n      <ScrollView>\n        <Form\n          initialValues={{\n            title: '',\n            description: '',\n            dateCreated: '',\n            dateDue: '',\n            status: 'Incomplete',\n            owner: '',\n            comments: '',\n            notifications: '',\n          }}\n          onSubmit={(values) => {\n            setSubmitted(true);\n            handleSubmit(values);\n          }}\n        >\n          <Form.Field\n            name=\"title\"\n            placeholder=\"Enter task name\"\n            autoCapitalize=\"none\"\n          />\n          <Form.Field\n            name=\"description\"\n            placeholder=\"Enter task description\"\n            autoCapitalize=\"none\"\n          />\n          <Form.Field\n            name=\"dateDue\"\n            placeholder=\"Enter due date for this task\"\n            autoCapitalize=\"none\"\n          />\n          <Form.Button title={'Add new task'} />\n        </Form>\n      </ScrollView>\n    </SafeAreaView>\n  ) : (\n    <SafeAreaView style={styles.container}>\n      <Text style={styles.h1_text}>Task successfully created!</Text>\n      <TouchableOpacity\n        style={styles.addTaskButton}\n        onPress={() => navigation.navigate('MainTasksScreen', {newTask})} // Pass new task to 'MainTasksScreen.js'\n      >\n        <Text style={styles.buttonText}>Return to Home Screen</Text>\n      </TouchableOpacity>\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  addTaskButton: {\n    borderWidth: 1,\n    borderRadius: 5,\n    borderColor: 'black',\n    backgroundColor: '#c3a6ff',\n    textAlign: 'center',\n    padding: 5,\n    shadowOffset:{ width: 2,  height: 2, },\n    shadowColor: 'black',\n    shadowOpacity: 1.0,\n  },\n  container: {\n    flex: 1,\n    marginTop: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: '90%',\n  },\n  h1_text: {\n    fontSize: 48,\n    marginBottom: 25,\n    justifyContent: 'center',\n    textAlign: 'center',\n  },\n  field: {\n    padding: 5,\n    backgroundColor: 'white',\n    borderRadius: 5,\n    fontSize: 18,\n  },\n  fieldContainer: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  label: {\n    fontWeight: 'bold',\n  },\n  name: {\n    fontSize: 24,\n    marginBottom: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  connectButton: {\n    margin: 30,\n    padding: 10,\n    textAlign: 'center',\n    backgroundColor: 'lightblue',\n  },\n  connectText: {\n    fontSize: 22,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    // fontWeight: 500,\n  },\n  roleButton: {\n    backgroundColor: '#2196F3',\n    fontSize: 16,\n    width: 250,\n    padding: 15,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    justifyContent: 'center',\n    textAlign: 'center',\n  },\n  buttonText: {\n    fontSize: 20,\n    color: 'black',\n    textAlign: 'center',\n  }\n})\n\nexport default CreateTaskScreen\n","import React from 'react'\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native'\n\n// TODO (L11): conditional styling?\n\nconst UserProfile = ({ user, view }) => (\n  <TouchableOpacity onPress={() => view(user)}>\n    <View style={styles.container}>\n      <Text style={styles.title}>{user.patientInfo.name}</Text>\n    </View>\n  </TouchableOpacity>\n)\n\nconst row = {\n  fontSize: 16,\n  marginLeft: 10,\n  marginRight: 10,\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n    marginTop: 20,\n    paddingTop: 5,\n    paddingBottom: 5,\n    //paddingLeft: 10,\n    //paddingRight: 75,\n    width: '100%',\n    borderWidth: 1,\n    borderColor: 'black',\n    borderRadius: 5,\n  },\n  title: {\n    ...row,\n    fontWeight: \"500\",\n  },\n  dateDue: {\n    ...row,\n    fontStyle: 'italic',\n  },\n  incompleteStatus: {\n    ...row,\n    color: 'red',\n  },\n  completeStatus: {\n    ...row,\n    color: 'green',\n  },\n})\n\nexport default UserProfile\n","import React from 'react'\nimport { Text, View, StyleSheet, TouchableOpacity, Button } from 'react-native'\nimport { users } from '../utils/data'\nimport TaskList from '../components/TaskList'\nimport { useSafeAreaInsets } from 'react-native-safe-area-context'\nimport UserProfile from '../components/UserProfile'\n\n\nconst ViewPatientsScreen = ({ navigation, route }) => {\n  const view = (user) => {\n    navigation.navigate('MainTasksScreen', {user : user})\n  }\n\n  // If we come from 'CreateTaskScreen' (i.e. we've added a new task), add & display the new task\n  // Else, just use the hardcoded list in 'data.js'\n  let userList = users.users\n\n\n  return (\n    <View style={styles.container}>\n      {userList.map((user, idx) => (\n        <UserProfile key={idx} user={user} view={view}/>\n      ))}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    marginTop: 10,\n  },\n  newTaskButton: {\n    borderWidth: 1,\n    borderRadius: 5,\n    borderColor: 'black',\n    backgroundColor: '#c3a6ff',\n    width: '85%',\n    textAlign: 'center',\n    padding: 5,\n    maxWidth: 800,\n    shadowOffset:{width: 2,  height: 2},\n    shadowColor: 'black',\n    shadowOpacity: 1.0,\n  },\n  title: {\n    fontSize: 22,\n  },\n})\n\nexport default ViewPatientsScreen\n","import React from 'react'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport { StyleSheet } from 'react-native'\nimport { NavigationContainer } from '@react-navigation/native'\nimport MainTasksScreen from './screens/MainTasksScreen'\nimport TaskDetailScreen from './screens/TaskDetailScreen'\nimport CreateTaskScreen from './screens/CreateTaskScreen'\nimport ViewPatientsScreen from './screens/ViewPatientsScreen'\n\n\nconst Stack = createStackNavigator()\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n\n      <Stack.Navigator\n        screenOptions={{\n          headerStyle: {\n            backgroundColor: '#610f94', // some purple color lol\n          },\n          headerTintColor: 'white',\n          headerTitleStyle: {\n            alignSelf: 'center',\n            fontWeight: 'bold',\n          },\n          headerTitleContainerStyle: {\n            left: 0,\n          },\n        }}\n      >\n        <Stack.Screen\n          name=\"ViewPatientsScreen\"\n          component={ViewPatientsScreen}\n          options={{ title: 'Your Patients' }}\n        />  \n        <Stack.Screen\n          name=\"MainTasksScreen\"\n          component={MainTasksScreen}\n          options={{ title: 'Main Tasks' }}\n        />\n\n        <Stack.Screen\n          name=\"CreateTaskScreen\"\n          component={CreateTaskScreen}\n          options={{ title: 'Create New Task' }}\n        />\n        <Stack.Screen\n          name=\"TaskDetailScreen\"\n          component={TaskDetailScreen}\n          options={{ title: 'Task Details' }}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n})\n"],"sourceRoot":""}