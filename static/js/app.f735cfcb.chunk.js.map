{"version":3,"sources":["components/Task.js","components/TaskList.js","screens/MainTasksScreen.js","utils/data.js","screens/TaskDetailScreen.js","App.js"],"names":["styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","marginTop","paddingTop","paddingBottom","paddingLeft","paddingRight","borderWidth","borderColor","borderRadius","title","fontSize","fontWeight","dateDue","fontStyle","incompleteStatus","color","completeStatus","Task","task","view","TouchableOpacity","onPress","View","style","Text","status","TaskList","tasks","ScrollView","map","index","key","userList","id","patientInfo","name","sex","dob","pcp","nextVisit","homePhone","mobilePhone","insurance","pharmacy","careTeamMembers","description","dateCreated","owner","comments","notifications","MainTasksScreen","navigation","navigate","user","idx","statusContainer","date","marginBottom","TaskDetailScreen","route","params","Stack","createStackNavigator","App","NavigationContainer","Navigator","screenOptions","headerStyle","headerTintColor","headerTitleStyle","alignSelf","headerTitleContainerStyle","left","Screen","component","options"],"mappings":"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","file":"static/js/app.f735cfcb.chunk.js","sourcesContent":["import React from 'react'\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native'\n\n// TODO (L11): conditional styling?\n\nconst Task = ({ task, view }) => (\n  <TouchableOpacity onPress={() => view(task)}>\n    <View style={styles.container}>\n      <Text style={styles.title}>{task.title}</Text>\n      <Text style={styles.dateDue}>Due: {task.dateDue}</Text>\n      <Text style={styles.incompleteStatus}>Status: {task.status}</Text>\n    </View>\n  </TouchableOpacity>\n)\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n    marginTop: 20,\n    paddingTop: 5,\n    paddingBottom: 5,\n    paddingLeft: 10,\n    paddingRight: 75,\n    borderWidth: 1,\n    borderColor: 'black',\n    borderRadius: 5,\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: 500,\n  },\n  dateDue: {\n    fontSize: 16,\n    fontStyle: 'italic',\n  },\n  incompleteStatus: {\n    fontSize: 16,\n    color: 'red',\n  },\n  completeStatus: {\n    fontSize: 16,\n    color: 'green',\n  },\n})\n\nexport default Task\n","import React from 'react'\nimport { ScrollView } from 'react-native'\nimport Task from './Task'\n\nconst TaskList = ({ tasks, view }) => {\n  return (\n    <ScrollView>\n      {tasks.map((task, index) => (\n        <Task key={index} task={task} view={view} />\n      ))}\n    </ScrollView>\n  )\n}\n\nexport default TaskList\n","import React from 'react'\nimport { Text, View, StyleSheet } from 'react-native'\nimport { users } from '../utils/data'\nimport TaskList from '../components/TaskList'\n\nconst userList = users.users\n\nconst MainTasksScreen = ({ navigation }) => {\n  const view = (task) => {\n    navigation.navigate('TaskDetailScreen', { task: task })\n  }\n\n  return (\n    <View style={styles.container}>\n      {/* <Text style={styles.title}>Current Tasks</Text> */}\n      {userList.map((user, idx) => (\n        <TaskList key={idx} tasks={user.tasks} view={view} />\n      ))}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 10,\n  },\n  title: {\n    fontSize: 22,\n    fontWeight: 'bold',\n  },\n})\n\nexport default MainTasksScreen\n","export const users = {\n  users: [\n    {\n      id: 'laura',\n      patientInfo: {\n        name: 'Laura Chen',\n        sex: 'female',\n        dob: '09/23/1958',\n        pcp: 'Dr John Doe',\n        nextVisit: '05/25/2019',\n        homePhone: '402-456-7890',\n        mobilePhone: '(236) 561-6354',\n        insurance: 'Medicare',\n        pharmacy: 'CVS',\n        careTeamMembers: [\n          'Dr. John Doe',\n          'Nurse Ted Smith',\n          'Social Worker Colleen Jones',\n          'Sister Sara Chen',\n        ],\n      },\n      tasks: [\n        {\n          title: 'Follow up with Vascular surgery',\n          description: '',\n          dateCreated: '05/09/2021',\n          dateDue: '05/30/2021',\n          status: 'Incomplete',\n          owner: 'Dr. John Doe',\n          comments: '',\n          notifications: '',\n        },\n        {\n          title: 'Cardiology evaluation',\n          description: '',\n          dateCreated: '05/09/2021',\n          dateDue: '06/09/2021',\n          status: 'Incomplete',\n          owner: 'Nurse Ted Smith',\n          comments: '',\n          notifications: '',\n        },\n      ],\n    },\n  ],\n}\n","import React from 'react'\nimport { Text, View, StyleSheet } from 'react-native'\n\nconst TaskDetailScreen = ({ navigation, route }) => {\n  const task = route.params.task\n\n  // handle comments & notif later\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{task.title}</Text>\n      <Text style={styles.date}>\n        Created: {task.dateCreated} | Due: {task.dateDue}\n      </Text>\n      <Text style={styles.owner}>- {task.owner} -</Text>\n      <Text style={styles.description}>{task.description}</Text>\n      <View style={styles.statusContainer}>\n        <Text style={styles.incompleteStatus}>{task.status}</Text>\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    marginTop: 20,\n  },\n  statusContainer: {\n    backgroundColor: 'white',\n    paddingTop: 10,\n    paddingBottom: 10,\n    paddingLeft: 75,\n    paddingRight: 75,\n    borderWidth: 1,\n    borderColor: 'black',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 500,\n  },\n  description: {\n    fontSize: 16,\n  },\n  date: {\n    fontSize: 14,\n    fontStyle: 'italic',\n    marginBottom: 5,\n  },\n  incompleteStatus: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'red',\n  },\n  completeStatus: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'green',\n  },\n  owner: {\n    marginBottom: 30,\n  },\n})\n\nexport default TaskDetailScreen\n","import { StatusBar } from 'expo-status-bar'\nimport React from 'react'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport { StyleSheet, Text, View } from 'react-native'\nimport { NavigationContainer } from '@react-navigation/native'\nimport MainTasksScreen from './screens/MainTasksScreen'\nimport TaskDetailScreen from './screens/TaskDetailScreen'\n\nconst Stack = createStackNavigator()\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator\n        screenOptions={{\n          headerStyle: {\n            backgroundColor: '#610f94', // some purple color lol\n          },\n          headerTintColor: 'white',\n          headerTitleStyle: {\n            alignSelf: 'center',\n            fontWeight: 'bold',\n          },\n          headerTitleContainerStyle: {\n            left: 0,\n          }\n        }}>\n        <Stack.Screen\n          name=\"MainTasksScreen\"\n          component={MainTasksScreen}\n          options={{ title: 'Main Tasks' }}\n        />\n        <Stack.Screen\n          name=\"TaskDetailScreen\"\n          component={TaskDetailScreen}\n          options={{ title: 'Task Details' }}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n})\n"],"sourceRoot":""}