{"version":3,"sources":["components/Task.js","components/TaskList.js","screens/MainTasksScreen.js","utils/data.js","screens/TaskDetailScreen.js","components/Forms/colors.js","components/Forms/FormErrorMessage.js","components/Forms/FormTextInput.js","components/Forms/FormButton.js","components/Forms/FormSwitch.js","components/Form.js","components/Forms/Form.js","components/Forms/FormField.js","screens/CreateTaskScreen.js","App.js"],"names":["row","fontSize","marginLeft","marginRight","styles","StyleSheet","create","container","flex","backgroundColor","alignitems","justifyContent","marginTop","paddingTop","paddingBottom","width","borderWidth","borderColor","borderRadius","title","fontWeight","dateDue","fontStyle","incompleteStatus","color","completeStatus","Task","task","view","TouchableOpacity","onPress","View","style","Text","status","maxWidth","TaskList","tasks","ScrollView","map","idx","key","userList","id","patientInfo","name","sex","dob","pcp","nextVisit","homePhone","mobilePhone","insurance","pharmacy","careTeamMembers","description","dateCreated","owner","comments","notifications","alignItems","newTaskButton","textAlign","padding","shadowOffset","height","shadowColor","shadowOpacity","MainTasksScreen","navigation","navigate","user","statusContainer","paddingLeft","paddingRight","date","marginBottom","TaskDetailScreen","route","params","primary","secondary","black","white","ghostWhite","lightGrey","mediumGrey","red","lightPurple","FormErrorMessage","error","visible","errorText","Colors","FormTextInput","leftIcon","rightIcon","handlePasswordVisibility","otherProps","MaterialCommunityIcons","size","icon","TextInput","input","placeholderTextColor","rightIconStyles","flexDirection","marginVertical","alignSelf","button","buttonText","textTransform","Form","props","children","initialValues","onSubmit","validationSchema","Fragment","Base","Field","useFormikContext","setFieldTouched","setFieldValue","values","errors","touched","value","onChangeText","text","onBlur","Button","handleSubmit","ErrorMessage","Switch","onChange","x","onValueChange","addTaskButton","h1_text","field","fieldContainer","label","developerImage","connectButton","margin","connectText","roleButton","CreateTaskScreen","useState","submitted","setSubmitted","SafeAreaView","placeholder","autoCapitalize","Stack","createStackNavigator","App","NavigationContainer","Navigator","screenOptions","headerStyle","headerTintColor","headerTitleStyle","headerTitleContainerStyle","left","Screen","component","options"],"mappings":"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","file":"static/js/app.ba2a4c19.chunk.js","sourcesContent":["import React from 'react'\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native'\n\n// TODO (L11): conditional styling?\n\nconst Task = ({ task, view }) => (\n  <TouchableOpacity onPress={() => view(task)}>\n    <View style={styles.container}>\n      <Text style={styles.title}>{task.title}</Text>\n      <Text style={styles.dateDue}>Due: {task.dateDue}</Text>\n      <Text style={styles.incompleteStatus}>Status: {task.status}</Text>\n    </View>\n  </TouchableOpacity>\n)\n\nconst row = {\n  fontSize: 16,\n  marginLeft: 10,\n  marginRight: 10,\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignitems: 'flex-start',\n    justifyContent: 'center',\n    marginTop: 20,\n    paddingTop: 5,\n    paddingBottom: 5,\n    //paddingLeft: 10,\n    //paddingRight: 75,\n    width: '100%',\n    borderWidth: 1,\n    borderColor: 'black',\n    borderRadius: 5,\n  },\n  title: {\n    ...row,\n    fontWeight: 500,\n  },\n  dateDue: {\n    ...row,\n    fontStyle: 'italic',\n  },\n  incompleteStatus: {\n    ...row,\n    color: 'red',\n  },\n  completeStatus: {\n    ...row,\n    color: 'green',\n  },\n})\n\nexport default Task\n","import React from 'react'\nimport { ScrollView, StyleSheet } from 'react-native'\nimport Task from './Task'\n\nconst TaskList = ({ tasks, view }) => {\n  return (\n    <ScrollView style={styles.container}>\n      {tasks.map((task, idx) => (\n        <Task key={idx} task={task} view={view} />\n      ))}\n    </ScrollView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '85%',\n    maxWidth: 800,\n  },\n})\n\nexport default TaskList\n","import React from 'react'\nimport { Text, View, StyleSheet, TouchableOpacity, Button } from 'react-native'\nimport { users } from '../utils/data'\nimport TaskList from '../components/TaskList'\n\nconst userList = users.users\n\nconst MainTasksScreen = ({ navigation }) => {\n  const view = (task) => {\n    navigation.navigate('TaskDetailScreen', { task: task })\n  }\n\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity\n        onPress={() => navigation.navigate('CreateTaskScreen')}\n        style={styles.newTaskButton}\n      >\n        <Text style={styles.title}>Create new task</Text>\n      </TouchableOpacity>\n      {userList.map((user, idx) => (\n        <TaskList key={idx} tasks={user.tasks} view={view}/>\n      ))}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 10,\n  },\n  newTaskButton: {\n    borderWidth: 1,\n    borderRadius: 5,\n    borderColor: 'black',\n    backgroundColor: '#c3a6ff',\n    width: '85%',\n    textAlign: 'center',\n    padding: 5,\n    maxWidth: 800,\n    shadowOffset:{ width: 2,  height: 2, },\n    shadowColor: 'black',\n    shadowOpacity: 1.0,\n  },\n  title: {\n    fontSize: 22,\n  },\n})\n\nexport default MainTasksScreen\n","export const users = {\n  users: [\n    {\n      id: 'laura',\n      patientInfo: {\n        name: 'Laura Chen',\n        sex: 'female',\n        dob: '09/23/1958',\n        pcp: 'Dr John Doe',\n        nextVisit: '05/25/2019',\n        homePhone: '402-456-7890',\n        mobilePhone: '(236) 561-6354',\n        insurance: 'Medicare',\n        pharmacy: 'CVS',\n        careTeamMembers: [\n          'Dr. John Doe',\n          'Nurse Ted Smith',\n          'Social Worker Colleen Jones',\n          'Sister Sara Chen',\n        ],\n      },\n      tasks: [\n        {\n          title: 'Follow up with Vascular surgery',\n          description: '',\n          dateCreated: '05/09/2021',\n          dateDue: '05/30/2021',\n          status: 'Incomplete',\n          owner: 'Dr. John Doe',\n          comments: '',\n          notifications: '',\n        },\n        {\n          title: 'Cardiology evaluation',\n          description: '',\n          dateCreated: '05/09/2021',\n          dateDue: '06/09/2021',\n          status: 'Incomplete',\n          owner: 'Nurse Ted Smith',\n          comments: '',\n          notifications: '',\n        },\n      ],\n    },\n  ],\n}\n","import React from 'react'\nimport { Text, View, StyleSheet } from 'react-native'\n\nconst TaskDetailScreen = ({ navigation, route }) => {\n  const task = route.params.task\n\n  // handle comments & notif later\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{task.title}</Text>\n      <Text style={styles.date}>\n        Created: {task.dateCreated} | Due: {task.dateDue}\n      </Text>\n      <Text style={styles.owner}>- {task.owner} -</Text>\n      <Text style={styles.description}>{task.description}</Text>\n      <View style={styles.statusContainer}>\n        <Text style={styles.incompleteStatus}>{task.status}</Text>\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    marginTop: 20,\n  },\n  statusContainer: {\n    backgroundColor: 'white',\n    paddingTop: 10,\n    paddingBottom: 10,\n    paddingLeft: 75,\n    paddingRight: 75,\n    borderWidth: 1,\n    borderColor: 'black',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 500,\n  },\n  description: {\n    fontSize: 16,\n  },\n  date: {\n    fontSize: 14,\n    fontStyle: 'italic',\n    marginBottom: 5,\n  },\n  incompleteStatus: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'red',\n  },\n  completeStatus: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'green',\n  },\n  owner: {\n    marginBottom: 30,\n  },\n})\n\nexport default TaskDetailScreen\n","export default {\n  primary: 'lightblue',\n  secondary: '#039be5',\n  black: '#222222',\n  white: '#ffffff',\n  ghostWhite: '#f8f8ff',\n  lightGrey: '#f9f9f9',\n  mediumGrey: '#6e6869',\n  red: '#fc5c65',\n  lightPurple: '#c3a6ff',\n}\n","import React from 'react'\nimport { StyleSheet, Text } from 'react-native'\n\nimport Colors from './colors'\n\nexport default function FormErrorMessage({ error, visible }) {\n  if (!error || !visible) {\n    return null\n  }\n\n  return <Text style={styles.errorText}>{error}</Text>\n}\n\nconst styles = StyleSheet.create({\n  errorText: {\n    marginLeft: 15,\n    color: Colors.red,\n    fontSize: 16,\n    marginBottom: 5,\n    fontWeight: '600',\n  },\n})\n","import React from 'react'\nimport { View, StyleSheet, TextInput, TouchableOpacity } from 'react-native'\nimport { MaterialCommunityIcons } from '@expo/vector-icons'\n\nimport Colors from './colors'\n\nexport default function FormTextInput({\n  leftIcon,\n  width = '100%',\n  rightIcon,\n  handlePasswordVisibility,\n  ...otherProps\n}) {\n  return (\n    <View style={[styles.container, { width }]}>\n      {leftIcon && (\n        <MaterialCommunityIcons\n          name={leftIcon}\n          size={20}\n          color={Colors.mediumGrey}\n          style={styles.icon}\n        />\n      )}\n      <TextInput\n        style={styles.input}\n        placeholderTextColor={Colors.mediumGrey}\n        {...otherProps}\n      />\n      {rightIcon && (\n        <TouchableOpacity onPress={handlePasswordVisibility}>\n          <MaterialCommunityIcons\n            name={rightIcon}\n            size={20}\n            color={Colors.mediumGrey}\n            style={styles.rightIconStyles}\n          />\n        </TouchableOpacity>\n      )}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.lightGrey,\n    borderRadius: 25,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    padding: 15,\n    marginVertical: 10,\n  },\n  icon: {\n    marginRight: 10,\n  },\n  input: {\n    flex: 1,\n    width: '100%',\n    fontSize: 18,\n    color: Colors.black,\n  },\n  rightIconStyles: {\n    alignSelf: 'center',\n    marginLeft: 10,\n  },\n})\n","import React from 'react'\nimport { Text, TouchableOpacity, StyleSheet } from 'react-native'\nimport { useFormikContext } from 'formik'\n\nimport Colors from './colors'\n\nexport default function FormButton({ title, color = 'lightPurple' }) {\n  const { handleSubmit, values } = useFormikContext()\n  const text = typeof title === 'function' ? title(values) : title\n\n  return (\n    <TouchableOpacity\n      style={[styles.button, { backgroundColor: Colors[color] }]}\n      onPress={handleSubmit}\n    >\n      <Text style={styles.buttonText}>{text}</Text>\n    </TouchableOpacity>\n  )\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    borderWidth: 1,\n    borderRadius: 5,\n    borderColor: 'black',\n    textAlign: 'center',\n    padding: 5,\n    maxWidth: 800,\n    shadowOffset:{ width: 2,  height: 2, },\n    shadowColor: 'black',\n    shadowOpacity: 1.0,\n  },\n  buttonText: {\n    color: Colors.black,\n    fontSize: 18,\n    fontWeight: '600',\n    textTransform: 'uppercase',\n  },\n  \n})\n","import React from 'react'\nimport { StyleSheet, Switch, Text, View } from 'react-native'\nimport { useFormikContext } from 'formik'\n\nimport Colors from './colors'\n\nexport default function FormSwitch({\n  name,\n  title,\n  onChange = (x) => x,\n  ...otherProps\n}) {\n  const { values, setFieldValue } = useFormikContext()\n  const value = values[name]\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{title}</Text>\n      <Switch\n        value={value}\n        onValueChange={(value) => {\n          onChange(value)\n          setFieldValue(name, value)\n        }}\n        {...otherProps}\n      />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'row',\n  },\n  title: {\n    color: Colors.white,\n    fontSize: 18,\n    fontWeight: '600',\n    marginRight: 5,\n  },\n})\n","import Base from './Forms/Form'\nimport FormField from './Forms/FormField'\nimport FormButton from './Forms/FormButton'\nimport FormErrorMessage from './Forms/FormErrorMessage'\nimport FormSwitch from './Forms/FormSwitch'\n\nconst Form = (props) => Base(props)\n\nForm.Field = FormField\nForm.Button = FormButton\nForm.ErrorMessage = FormErrorMessage\nForm.Switch = FormSwitch\n\nexport default Form\n","import React from 'react'\nimport { Formik } from 'formik'\n\nexport default function Form({\n  children,\n  initialValues,\n  onSubmit,\n  validationSchema,\n}) {\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      {() => <React.Fragment>{children}</React.Fragment>}\n    </Formik>\n  )\n}\n","import React from 'react'\nimport { useFormikContext } from 'formik'\n\nimport FormErrorMessage from './FormErrorMessage'\nimport FormTextInput from './FormTextInput'\n\nexport default function FormField({ name, width, ...otherProps }) {\n  const {\n    setFieldTouched,\n    setFieldValue,\n    values,\n    errors,\n    touched,\n  } = useFormikContext()\n\n  return (\n    <React.Fragment>\n      <FormTextInput\n        value={values[name]}\n        onChangeText={(text) => setFieldValue(name, text)}\n        onBlur={() => setFieldTouched(name)}\n        width={width}\n        {...otherProps}\n      />\n      <FormErrorMessage error={errors[name]} visible={touched[name]} />\n    </React.Fragment>\n  )\n}\n","import React, { useState } from 'react'\nimport { SafeAreaView, StyleSheet, Text, TouchableOpacity } from 'react-native'\nimport { ScrollView } from 'react-native-gesture-handler'\nimport Form from '../components/Form'\n\nconst CreateTaskScreen = ({ navigation }) => {\n  const [submitted, setSubmitted] = useState(false)\n\n  return !submitted ? (\n    <SafeAreaView style={styles.container}>\n      <Text label=\"Name\" style={styles.name}>\n        Post a new Job!\n      </Text>\n      <ScrollView>\n        <Form\n          initialValues={{\n            title: '',\n            description: '',\n            dateCreated: '',\n            dateDue: '',\n            status: 'Incomplete',\n            owner: '',\n            comments: '',\n            notifications: '',\n          }}\n          onSubmit={() => {\n            setSubmitted(true)\n          }}\n        >\n          <Form.Field\n            name=\"title\"\n            placeholder=\"Enter task name\"\n            autoCapitalize=\"none\"\n          />\n          <Form.Field\n            name=\"description\"\n            placeholder=\"Enter task description\"\n            autoCapitalize=\"none\"\n          />\n          <Form.Field\n            name=\"dateDue\"\n            placeholder=\"Enter due date for this task\"\n            autoCapitalize=\"none\"\n          />\n          <Form.Button title={'Add new task'} />\n        </Form>\n      </ScrollView>\n    </SafeAreaView>\n  ) : (\n    <SafeAreaView style={styles.container}>\n      <Text style={styles.h1_text}>Task successfully created!</Text>\n      <TouchableOpacity\n        style={styles.addTaskButton}\n        onPress={() => {\n          navigation.navigate('MainTasksScreen')\n        }}\n      >\n        <Text style={styles.buttonText}>Return to Home Screen</Text>\n      </TouchableOpacity>\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  addTaskButton: {\n    borderWidth: 1,\n    borderRadius: 5,\n    borderColor: 'black',\n    backgroundColor: '#c3a6ff',\n    textAlign: 'center',\n    padding: 5,\n    maxWidth: 800,\n    shadowOffset:{ width: 2,  height: 2, },\n    shadowColor: 'black',\n    shadowOpacity: 1.0,\n  },\n  container: {\n    flex: 1,\n    marginTop: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: '90%',\n  },\n  h1_text: {\n    fontSize: 48,\n    marginBottom: 25,\n    justifyContent: 'center',\n    textAlign: 'center',\n  },\n  field: {\n    padding: 5,\n    backgroundColor: 'white',\n    borderRadius: 5,\n    fontSize: 18,\n  },\n  fieldContainer: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  label: {\n    fontWeight: 'bold',\n  },\n  name: {\n    fontSize: 24,\n    marginBottom: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  developerImage: {\n    width: 200,\n    height: 300,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: 10,\n  },\n  connectButton: {\n    margin: 30,\n    padding: 10,\n    textAlign: 'center',\n    backgroundColor: 'lightblue',\n  },\n  connectText: {\n    fontSize: 22,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    // fontWeight: 500,\n  },\n  roleButton: {\n    backgroundColor: '#2196F3',\n    fontSize: 16,\n    width: 250,\n    padding: 15,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    justifyContent: 'center',\n    textAlign: 'center',\n  },\n  buttonText: {\n    fontSize: 20,\n    color: 'black',\n    textAlign: 'center',\n  },\n  developerImage: {\n    width: 200,\n    height: 200,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: 10,\n  },\n})\n\nexport default CreateTaskScreen\n","import React from 'react'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport { StyleSheet } from 'react-native'\nimport { NavigationContainer } from '@react-navigation/native'\nimport MainTasksScreen from './screens/MainTasksScreen'\nimport TaskDetailScreen from './screens/TaskDetailScreen'\nimport CreateTaskScreen from './screens/CreateTaskScreen'\n\nconst Stack = createStackNavigator()\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator\n        screenOptions={{\n          headerStyle: {\n            backgroundColor: '#610f94', // some purple color lol\n          },\n          headerTintColor: 'white',\n          headerTitleStyle: {\n            alignSelf: 'center',\n            fontWeight: 'bold',\n          },\n          headerTitleContainerStyle: {\n            left: 0,\n          },\n        }}\n      >\n        <Stack.Screen\n          name=\"MainTasksScreen\"\n          component={MainTasksScreen}\n          options={{ title: 'Main Tasks' }}\n        />\n        <Stack.Screen\n          name=\"CreateTaskScreen\"\n          component={CreateTaskScreen}\n          options={{ title: 'Create New Task' }}\n        />\n        <Stack.Screen\n          name=\"TaskDetailScreen\"\n          component={TaskDetailScreen}\n          options={{ title: 'Task Details' }}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n})\n"],"sourceRoot":""}